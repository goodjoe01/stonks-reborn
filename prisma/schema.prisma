generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) @db.VarChar(255)
  dni       Int      @unique
  email     String   @unique
  password  String   @db.VarChar(255)
  firstName  String?  @db.VarChar(255)
  lastName  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)
  token     String   @db.VarChar(255)
  board     Board[]
  goal      Goal[]
}

model TermDeposit {
  id     String @id @default(cuid()) @db.VarChar(255)
  name   String
  bankId String
  bank   Bank   @relation(fields: [bankId], references: [id])
}

model Goal {
  id         String   @id @default(cuid()) @db.VarChar(255)
  name       String?  @db.VarChar(255)
  goalAmount Decimal
  goalDate   DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String   @db.VarChar(255)
  user       User     @relation(fields: [userId], references: [id])
}

model Bank {
  id                        String                      @id @default(cuid()) @db.VarChar(255)
  name                      String                      @db.VarChar(255)
  ruc                       Int
  website                   String                      @db.VarChar(255)
  accountTermDepositOnBanks AccountTermDepositOnBanks[]
  termDeposit               TermDeposit[]
}

model Board {
  id                        String                      @id @default(cuid()) @db.VarChar(255)
  name                      String?                     @db.VarChar(255)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  userId                    String                      @db.VarChar(255)
  user                      User                        @relation(fields: [userId], references: [id])
  accountTermDepositOnBanks AccountTermDepositOnBanks[]
}

model AccountTermDepositOnBanks {
  id        String   @id @default(cuid()) @db.VarChar(255)
  bankId    String
  boardId   String
  capital   Decimal  @db.Decimal(15, 7)
  tea       Decimal  @db.Decimal(10, 7)
  teaMin    Decimal  @db.Decimal(10, 7)
  finalDate DateTime
  startDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bank      Bank     @relation(fields: [bankId], references: [id])
  board     Board    @relation(fields: [boardId], references: [id])
}
